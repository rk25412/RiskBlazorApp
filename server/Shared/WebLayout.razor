@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@using Radzen
@using Radzen.Blazor
@using Clear.Risk.Models.ClearConnection
@using Microsoft.AspNetCore.Identity;
@using Clear.Risk.Models

<RadzenDialog />
<RadzenNotification />

<!doctype html>
<html lang="en-gb">
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <title>Clear Work Order</title>
    <link rel="icon" href="front/img/favicon.png">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="front/css/bootstrap.min.css">
    <!-- animate CSS -->
    <link rel="stylesheet" href="front/css/animate.css">
    <!-- owl carousel CSS -->
    <link rel="stylesheet" href="front/css/owl.carousel.min.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="front/css/all.css">
    <!-- flaticon CSS -->
    <link rel="stylesheet" href="front/css/flaticon.css">
    <link rel="stylesheet" href="front/css/themify-icons.css">
    <!-- font awesome CSS -->
    <link rel="stylesheet" href="front/css/magnific-popup.css">
    <!-- swiper CSS -->
    <link rel="stylesheet" href="front/css/slick.css">
    <!-- style CSS -->
    <link rel="stylesheet" href="front/css/style.css">
</head>
<body>
    <NavMenu />
    @Body
    <FooterMain />




</body>
</html>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (!(await AuthenticationState).User.Identity.IsAuthenticated)
        {
            navigationManager.NavigateTo("/login");
        }
        else
            navigationManager.NavigateTo("/dashboard");
    }
}